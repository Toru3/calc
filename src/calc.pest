atom = _{ int | ident }
int = @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) | "0" }
ident = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

uniop = _{ plus | neg }
plus = { "+" }
neg = { "-" }

binop = _{ add | sub | mul | div | rem | pow }
add = { "+" }
sub = { "-" }
mul = { "*" }
div = { "/" }
rem = { "%" }
pow = { "^" }

func = { ident ~ "(" ~ args ~ ")" }
args = _{ expr ~ ("," ~ expr)* | "" }

expr = { term1 ~ (binop ~ term1)* }
term1 = { uniop? ~ term0 }
term0 = { func | "(" ~ expr ~ ")" | atom }

WHITESPACE = _{ " " | "\t" | NEWLINE }
